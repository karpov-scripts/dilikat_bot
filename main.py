from aiogram import Bot, Dispatcher, executor, types

from config import test_bot_token
from keyboards import categories_ikb, main_ikb, product_ikb, category_products_ikb, user_info_ikb
from messages import product_message, category_products_message, get_user_info_message
import database as db

bot = Bot(token=test_bot_token)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    hello_image = types.InputFile('files/hello_image.png')
    await bot.send_photo(message.from_user.id, photo=hello_image)
    await bot.send_message(message.from_user.id,
                           'üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ Dilikat\n–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É, '
                           '–∞ –Ω–∞—à–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—ã –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –µ—ë –æ–±—Ä–∞–±–æ—Ç–∞—é—Ç',
                           parse_mode='HTML',
                           reply_markup=main_ikb)
    db.add_user(message.from_user.id, message.from_user.username,
                message.from_user.first_name, message.from_user.last_name)


@dp.callback_query_handler()
async def change_section(callback: types.CallbackQuery):
    if callback.data == '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤':
        await callback.message.answer(text='üî¥ –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?',
                                      reply_markup=categories_ikb)
    if callback.data == '–ú–æ–∏ –¥–∞–Ω–Ω—ã–µ':
        await callback.message.answer(text=get_user_info_message(callback.from_user.id),
                                      reply_markup=user_info_ikb,
                                      parse_mode='HTML')
    if callback.data == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        await callback.message.answer(text='üî¥ –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –±–æ—Ç–∞. –°–¥–µ–ª–∞–µ–º –∑–∞–∫–∞–∑?',
                                      reply_markup=main_ikb,
                                      parse_mode='HTML')
    if callback.data == '–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
        await callback.message.answer(text='üî¥ –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –±–æ—Ç–∞. –°–¥–µ–ª–∞–µ–º –∑–∞–∫–∞–∑?',
                                      reply_markup=main_ikb,
                                      parse_mode='HTML')

    if callback.data == '3D –ø—Ä–∏–Ω—Ç–µ—Ä—ã' or callback.data == '3D —Å–∫–∞–Ω–µ—Ä—ã' or callback.data == '–ü–µ—á–∏' \
            or callback.data == '–§—Ä–µ–∑–µ—Ä–Ω—ã–µ —Å—Ç–∞–Ω–∫–∏' or callback.data == '–§–æ—Ç–æ–ø–æ–ª–∏–º–µ—Ä—ã' or callback.data == 'CAD CAM –±–ª–æ–∫–∏':
        await callback.message.answer(text=category_products_message,
                                      reply_markup=category_products_ikb,
                                      parse_mode='HTML')


@dp.message_handler()
async def show_product(message: types.Message):
    if '/id' in message.text:
        product_image = types.InputFile('files/product.png')
        await bot.send_photo(message.from_user.id, photo=product_image)
        await bot.send_message(chat_id=message.from_user.id,
                               text=product_message,
                               parse_mode='HTML',
                               reply_markup=product_ikb)
    await bot.delete_message(message.from_user.id, message.message_id-1)


@dp.message_handler()
async def delete_other_messages(message: types.Message):
    await message.delete()


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
















# @dp.message_handler(commands=['choose_category'])
# async def start(message: types.Message):
#     await message.delete()
#     await bot.send_message(message.from_user.id,
#                            '<b>üî¥ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞:</b>',
#                            reply_markup=category_ikb,
#                            parse_mode='HTML')


# @dp.message_handler(commands=['make_order'])
# async def start(message: types.Message):
#     await message.delete()
#     await bot.send_message(message.from_user.id, '–î–∞–≤–∞–π—Ç–µ –∑–∞–ø–∏—à–µ–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å –∫–∞–∂–¥—ã–π —Ä–∞–∑!')
#     await bot.send_message(message.from_user.id, '<b>üî¥ –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è</b>', parse_mode='HTML')
#     await bot.send_message(message.from_user.id, '<b>üî¥ –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é</b>', parse_mode='HTML')


#reply - –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ,