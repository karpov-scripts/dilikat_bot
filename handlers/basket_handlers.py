from aiogram import types, Dispatcher

from database import DB
from messages import *
from keyboards import *


async def edit_basket_product_from_products(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    if '–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É' in callback.data:
        product_id = int(callback.data.replace('–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É ', ''))
        DB.add_to_basket(product_id=product_id, user_id=user_id)
        await callback.answer(text='–î–æ–±–∞–≤–∏–ª–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É', show_alert=True)
    else:
        product_id = int(callback.data.replace('–£–±—Ä–∞—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã ', ''))
        DB.remove_from_basket(product_id=product_id, user_id=user_id)
        await callback.answer(text='–£–±—Ä–∞–ª–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã', show_alert=True)


async def edit_basket_product_from_basket(message: types.Message):
    user_id = message.from_user.id
    if 'add_id' in message.text:
        product_id = int(message.text.replace('/add_id', ''))
        DB.add_to_basket(product_id=product_id, user_id=user_id)
    else:
        product_id = int(message.text.replace('/rem_id', ''))
        DB.remove_from_basket(product_id=product_id, user_id=user_id)

    basket = DB.get_basket(user_id=user_id)
    await message.answer(text=await get_basket_msg(basket), reply_markup=await get_basket_ikb(basket))


async def clear_basket(callback: types.CallbackQuery):
    DB.clear_basket(user_id=callback.from_user.id)
    await callback.answer(text=f'–í—Å–µ —Ç–æ–≤–∞—Ä—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã', show_alert=True)
    await callback.message.answer(text=await get_basket_msg(basket=None),
                                  reply_markup=await get_basket_ikb(basket=None))


async def create_order(callback: types.CallbackQuery):
    basket = DB.get_basket(user_id=callback.from_user.id)

    # –§–£–ù–ö–¶–ò–û–ù–ê–õ –û–¢–ü–†–ê–í–ö–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ô –û –ù–û–í–û–ú –ó–ê–ö–ê–ó–ï

    await callback.answer(text=f'–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä', show_alert=True)

    logo_img = types.InputFile('database/logo.png')
    await callback.message.answer_photo(photo=logo_img)
    await callback.message.edit_text(text='üî¥ –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –±–æ—Ç–∞. –•–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑?', reply_markup=main_ikb)


def register_basket_handlers(dp: Dispatcher):
    dp.register_callback_query_handler(callback=edit_basket_product_from_products,
                                       text_startswith=['–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É', '–£–±—Ä–∞—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã'])

    dp.register_message_handler(callback=edit_basket_product_from_basket, text_startswith=['/add_id', '/rem_id'])
    dp.register_callback_query_handler(callback=clear_basket, text=['–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É'])
    dp.register_callback_query_handler(callback=create_order, text=['–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑'])
